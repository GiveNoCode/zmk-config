/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEF 0
#define SYM 1
#define NAV 2
#define ADJ 3

/ {
        combos {
            compatible = "zmk,combos";

            Clear_BLE_Profile {
            bindings = <&bt BT_CLR>;
            key-positions = <0 38 5>;
            };

            Space {
            bindings = <&kp SPACE>;
            key-positions = <29 28>;
            };

            Enter {
            bindings = <&kp ENTER>;
            key-positions = <17 16>;
            };

        };
        keymap {
                compatible = "zmk,keymap";

                base_layer {
                        label = "BASE";
                        bindings = <
   &mt LCTRL ESC &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &mt RCTRL MINUS
   &mt LALT TAB  &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &mt RALT SQT
   &kp LSHFT     &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RSHIFT
                  &kp LEFT_GUI  &mo NAV &kp BSPC   &kp SPACE &mo SYM &kp RET
                        >;
                };
                symbols_layer {
                        label = "SYMBOLS";
                        bindings = <
&trans   &kp N1    &kp N2  &kp N3    &kp N4    &kp N5     &kp N6    &kp N7  &kp N8    &kp N9    &kp N0  &trans
&trans  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTERISK          &kp EQUAL  &kp PLUS      &trans
&trans  &kp GRAVE  &kp TILDE      &kp LEFT_BRACE   &kp LPAR      &kp LEFT_BRACKET  &kp RIGHT_BRACKET     &kp RPAR        &kp RIGHT_BRACE     &kp UNDERSCORE      &kp BACKSLASH &trans
                           &trans    &trans    &trans       &trans     &trans     &trans
                        >;
                };

                navigation_layer {
                        label = "NAVIGATION";
                        bindings = <
&trans          &trans  &kp LG(LEFT_BRACKET)  &kp LS(TAB)        &kp TAB          &kp LG(RIGHT_BRACKET)    &kp LA(LEFT)       &kp LA(DOWN)  &kp LA(UP)  &kp LA(RIGHT)  &trans  &trans
&kp LG(LC(TAB))           &trans  &trans                &kp K_SCROLL_DOWN  &kp K_SCROLL_UP  &trans                   &kp LEFT           &kp DOWN      &kp UP      &kp RIGHT      &trans  &trans
&trans  &trans  &kp HOME              &kp PG_DN          &kp PG_UP        &kp END                  &kp LG(LEFT)       &kp LG(DOWN)  &kp LG(UP)  &kp LG(RIGHT)  &trans  &trans
                                               &trans             &trans           &trans                   &trans  &trans        &trans
                        >;
                };
                adjustment_layer {
                        label = "ADJUSTMENT";
                        bindings = <
&trans  &kp F1        &kp F2        &kp F3        &kp F4        &kp F5          &kp F6           &kp F7           &kp F8           &kp F9                &kp F10               &kp F12
&kp K_PP  &kp K_PREV        &kp K_NEXT     &kp K_MUTE    &kp C_VOL_DN  &kp C_VOL_UP     &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &trans &trans &trans           &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4     &trans        &trans          &trans           &trans           &trans  &trans
                                    &trans        &trans        &trans          &trans           &trans           &trans
                        >;
                };
        };

        conditional_layers {
            compatible = "zmk,conditional-layers";

            Activate_EXT {
            if-layers = <SYM NAV>;
            then-layer = <ADJ>;
            };
        };
};
